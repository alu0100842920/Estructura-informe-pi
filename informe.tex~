\documentclass[spanish,a4paper,10pt]{article}

\usepackage{latexsym,amsfonts,amssymb,amstext,amsthm,float,amsmath}
\usepackage[spanish]{babel}
\usepackage[latin1]{inputenc}
\usepackage{doc}
\usepackage[pdftex]{graphicx}
\usepackage{epstopdf}
\ExecuteOptions{pdftex}
\AtEndOfPackage{
  \g@addto@macro\Gin@extensions{.eps.gz,.eps.zip}
  \@namedef{Gin@rule@.eps.gz}#1{{pdf}{.pdf}{`gunzip -c #1 | epstopdf -f >\Gin@base.pdf}}
  \@namedef{Gin@rule@.eps.zip}#1{{pdf}{.pdf}{`unzip -p #1 | epstopdf -f >\Gin@base.pdf}}
}% Permite que se puedan incluir archivos eps con pdflatex

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%123456789012345678901234567890123456789012345678901234567890123456789
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\textheight    29cm
%\textwidth     15cm
%\topmargin     -4cm
%\oddsidemargin  5mm

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\begin{figure}
\includegraphics[height=3cm, width=12cm]{imagen1.eps}
\label{fig:ULL}
\end{figure}
\title{Informe del número $\pi$}
\author{Daniel Montesdeoca Villaverde}
\date{9 de abril de 2014}

\maketitle

\begin{abstract}
 En este documento se tratará acerca del número $\pi$ calculado en \textsf{Python}.
\end{abstract}

%\thispagestyle{empty}
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Motivación y Objetivos}

Nuestro objetivo ha sido investigar el número $\pi$. Para ello se ha procedido a
aproximar $\pi$ hasta 35 cifras decimales usando Python\footnote{Página web de Python:
https://www.python.org}. También se ha
creado una función para usar $\pi$ en Python y hallado el umbral de error del
número $\pi$. La siguiente tabla es un ejemplo:

\begin{table}[ht]
\centering
\begin{tabular}{c c c c} %Columnas centradas (4 columnas)
\hline\hline 		%Inserta doble línea horizontal
Columna\#1 & Columna\#2 & Columna\#3 & Columna\#4 \\ [0.5ex] %Inserta nombre de las columnas
\hline 			%inserta una línea horizontal
1 & 43 & 54 & 34 \\
2 & 45 & 89 & 76 \\
3 & 23 & 67 & 98 \\
\hline
\end{tabular}
\label{table:example}
\end{table}


%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Procedimiento}
En primer lugar, hay que aproximar $\pi$ hasta 35 decimales. Para ello se deben
calcular los extremos de los subintervalos, el punto $x_i$, el valor de la función
de aproximación del número $\pi$, el resultado del número $\pi$ y por último
calcular $\pi$ con 35 decimales.
Referencia a tabla: ~\ref{table:example}
Referencia a gráfico: ~\ref{fig:ULL}
\subsection{Pasos que se deben seguir}

\begin{enumerate}
  \item
  Subintervalos.
  \item
  Punto $x_i$.
  \item
  Función de aproximación $fx_i$.
  \item
  Valor aproximado.
  \item
  Valor de $\pi$ con 35 decimales.
\end{enumerate}

Si utilizamos 4 subintervalos\footnote{Se pueden utilizar más, pero para este ejemplo
nos vale}, el programa debería de quedar así:

\begin{footnotesize}
\begin{verbatim}
Introduzca el número de intervalos (n > 0): 4
Subintervalo: [0   , 0.25]   x_i: 0.125   fx_i: 3.93846
Subintervalo: [0.25, 0.5 ]   x_i: 0.375   fx_i: 3.50685
Subintervalo: [0.5 , 0.75]   x_i: 0.625   fx_i: 2.8764
Subintervalo: [0.75, 1   ]   x_i: 0.875   fx_i: 2.26549

El valor aproximado de PI es:  3.14680051839 
El valor de PI con 35 decimales: 3.1415926535897931159979634685441852 \end{verbatim}
\end{footnotesize}

%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


\begin{thebibliography}{1}
\bibitem{python} Tutorial de Python. http://docs.python.org/2.7 
\bibitem{tabla} Cómo hacer una tabla: http://www1.maths.leeds.ac.uk/latex/TableHelp1.pdf
\end{thebibliography}



\end{document}
